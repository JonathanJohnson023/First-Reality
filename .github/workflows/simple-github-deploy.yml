name: 🚀 Simple GitHub Pages Deployment

on:
  push:
    branches: [ master, dev, 'feature/**', 'fix/**' ]
  pull_request:
    branches: [ dev, master ]

jobs:
  # Build and test (all branches)
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📋 Checkout Code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 🔧 Install Dependencies
      run: |
        echo "📦 Installing dependencies..."
        npm install --legacy-peer-deps
        echo "✅ Dependencies installed"
        
    - name: 🧪 Run Tests
      run: |
        echo "🧪 Running tests..."
        npm test
        echo "✅ Tests passed"
        
    - name: 🔨 Build Project
      run: |
        echo "🔨 Building project..."
        NODE_OPTIONS="--openssl-legacy-provider" npm run build
        
        if [ ! -f "dist/bundle.js" ]; then
          echo "❌ Build failed"
          exit 1
        fi
        
        BUNDLE_SIZE=$(du -h dist/bundle.js | cut -f1)
        echo "✅ Build successful: $BUNDLE_SIZE"

  # Deploy to production (master only)
  deploy-production:
    needs: build-and-test
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
      
    steps:
    - name: 📋 Checkout Master
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 🔧 Install Dependencies
      run: npm install --legacy-peer-deps
      
    - name: 🔨 Build for Production
      run: NODE_OPTIONS="--openssl-legacy-provider" npm run build
      
    - name: 🚀 Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./
        exclude_assets: '.github,node_modules,src,tests,*.md,package*.json,webpack.config.js,.gitignore'
        force_orphan: true
        enable_jekyll: false
        commit_message: "🎮 Production deployment"
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'
        
    - name: ✅ Verify Production
      run: |
        sleep 60
        echo "✅ Production deployed!"
        echo "🎮 URL: https://jonathanjohnson023.github.io/First-Reality/"

  # Feature branch artifact (since Netlify branch deploys are paid)
  create-feature-artifact:
    needs: build-and-test
    if: startsWith(github.ref, 'refs/heads/feature/') || startsWith(github.ref, 'refs/heads/fix/')
    runs-on: ubuntu-latest
    
    steps:
    - name: 📋 Checkout Feature Code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 🔧 Install Dependencies
      run: npm install --legacy-peer-deps
      
    - name: 🔨 Build Feature
      run: NODE_OPTIONS="--openssl-legacy-provider" npm run build
      
    - name: 📦 Create Feature Package
      run: |
        echo "📦 Creating feature testing package..."
        
        mkdir -p feature-package
        cp index.html feature-package/
        cp -r dist/ feature-package/
        cp -r styles/ feature-package/
        cp -r assets/ feature-package/ || echo "Assets not found"
        cp *.png feature-package/ || echo "PNG files not found"
        
        # Add feature banner
        sed -i 's|<title>First Reality</title>|<title>First Reality - ${{ github.ref_name }}</title>|g' feature-package/index.html
        sed -i 's|<body>|<body><div style="position:fixed;top:0;left:0;width:100%;background:#4CAF50;color:black;text-align:center;padding:4px;z-index:10000;font-size:12px;">🌟 FEATURE: ${{ github.ref_name }} 🌟</div><div style="height:25px;"></div>|g' feature-package/index.html
        
        # Create test instructions
        cat > feature-package/README.md << 'EOF'
        # Feature Branch Testing
        
        ## Quick Test
        1. Download this artifact
        2. Extract files
        3. Run: `python3 -m http.server 8000`
        4. Open: http://localhost:8000
        
        ## Test Checklist
        - [ ] Game loads without console errors
        - [ ] Enter key works on title screen  
        - [ ] Volume controls functional
        - [ ] Combat system works
        - [ ] No performance issues
        
        ## Ready for PR
        If tests pass, create PR to dev branch!
        EOF
        
        echo "✅ Feature package ready"
        
    - name: 📤 Upload Feature Artifact
      uses: actions/upload-artifact@v4
      with:
        name: feature-${{ github.ref_name }}-${{ github.sha }}
        path: feature-package/
        retention-days: 7
        
    - name: 🎮 Feature Testing Ready
      run: |
        echo "🎮 FEATURE TESTING PACKAGE READY!"
        echo ""
        echo "📦 Download artifact: feature-${{ github.ref_name }}-${{ github.sha }}"
        echo "🔗 From: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        echo ""
        echo "🧪 Test locally, then create PR to dev when ready!"

  # Comment on PR with deployment info
  comment-on-pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    
    steps:
    - name: 💬 Comment PR Status
      uses: actions/github-script@v7
      with:
        script: |
          const targetBranch = context.payload.pull_request.base.ref;
          const envUrls = {
            'dev': 'https://jonathanjohnson023.github.io/First-Reality/dev/',
            'master': 'https://jonathanjohnson023.github.io/First-Reality/'
          };
          
          const comment = \`## 🔍 PR Ready for Review!
          
          ### ✅ Status: BUILD VERIFIED
          - Tests: Passed ✅
          - Build: Successful ✅
          - Target: \${targetBranch} environment
          
          ### 🚀 When Merged
          **Will deploy to**: \${envUrls[targetBranch] || 'GitHub Pages'}
          
          ### 📋 Deployment Pipeline
          \`\`\`
          Merge → Build → Test → Deploy → Verify
          \`\`\`
          
          **Merge when ready to deploy!** 🚀\`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });