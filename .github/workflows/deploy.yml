name: Deploy to GitHub Pages

on:
  push:
    branches: [ main, master, 'feature/**', 'cursor/**' ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
      pull-requests: write
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Clear npm cache
      run: npm cache clean --force
        
    - name: Install dependencies
      run: |
        npm cache clean --force
        npm install --legacy-peer-deps
      
    - name: Build project
      run: |
        echo "🔧 Node.js version: $(node --version)"
        echo "📦 NPM version: $(npm --version)"
        
        # Try the custom build script first
        if node build-ci.js; then
          echo "✅ Custom build script succeeded"
        else
          echo "⚠️ Custom build failed, trying fallback..."
          
          # Fallback: try without legacy provider on Node 18
          if npx webpack --mode=production; then
            echo "✅ Fallback build succeeded"
          else
            echo "❌ Both build methods failed"
            exit 1
          fi
        fi
      
    - name: Create assets directory
      run: mkdir -p assets
      
    - name: Verify build output
      run: |
        echo "🔍 Verifying build output..."
        ls -la dist/
        
        # Check if required files exist
        if [ -f "dist/bundle.js" ]; then
          echo "✅ bundle.js exists ($(du -h dist/bundle.js | cut -f1))"
        else
          echo "❌ bundle.js missing!"
          exit 1
        fi
        
        if [ -f "index.html" ]; then
          echo "✅ index.html exists"
        else
          echo "❌ index.html missing!"
          exit 1
        fi
        
        echo "🎉 Build verification complete!"
        
    - name: Prepare deployment files
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/feature/') || startsWith(github.ref, 'refs/heads/cursor/')
      run: |
        # Create deployment directory
        mkdir -p deploy
        
        # Copy necessary files for deployment
        cp index.html deploy/
        cp -r dist/ deploy/
        cp -r styles/ deploy/
        cp -r assets/ deploy/ || echo "Assets directory not found, skipping"
        cp *.png deploy/ || echo "PNG files not found, skipping"
        cp first_reality_ff.png deploy/ || echo "Favicon not found, skipping"
        
        # Create .nojekyll to disable Jekyll processing
        touch deploy/.nojekyll
        
        echo "✅ Deployment files prepared"
        ls -la deploy/
        
    - name: Deploy to GitHub Pages (Production)
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./deploy
        force_orphan: true
        enable_jekyll: false
        
    - name: Deploy Feature Branch Preview
      if: startsWith(github.ref, 'refs/heads/feature/') || startsWith(github.ref, 'refs/heads/cursor/')
      run: |
        # Create feature branch directory structure
        mkdir -p feature_deploy/preview/${{ github.ref_name }}
        cp -r deploy/* feature_deploy/preview/${{ github.ref_name }}/
        
        # Deploy to feature branch location
        echo "Deploying feature branch to preview/${{ github.ref_name }}/"
        
    - name: Deploy Feature Branch to Pages
      if: startsWith(github.ref, 'refs/heads/feature/') || startsWith(github.ref, 'refs/heads/cursor/')
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./feature_deploy
        keep_files: true
        enable_jekyll: false
        
    - name: Comment deployment URL (Production)
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
      run: |
        echo "🚀 Production Deployment completed!"
        echo "🎮 Live Game URL: https://jonathanjohnson023.github.io/First-Reality"
        echo "📊 Build artifacts:"
        ls -la dist/
        
    - name: Comment deployment URL (Feature Branch)
      if: github.event_name == 'push' && (startsWith(github.ref, 'refs/heads/feature/') || startsWith(github.ref, 'refs/heads/cursor/'))
      run: |
        echo "🚀 Feature Branch Deployment completed!"
        echo "🎮 Preview URL: https://jonathanjohnson023.github.io/First-Reality/preview/${{ github.ref_name }}/"
        echo "📊 Build artifacts:"
        ls -la dist/
        echo ""
        echo "🔍 TESTING INSTRUCTIONS:"
        echo "1. Visit the preview URL above"
        echo "2. Test all new features"
        echo "3. Verify mobile responsiveness"
        echo "4. Check audio controls work"
        echo "5. Test save/load functionality"
        echo ""
        echo "✅ If everything works, merge to deploy to production!"
        
    - name: Deploy Preview (PR)
      if: github.event_name == 'pull_request'
      run: |
        echo "✅ Build successful! Ready for deployment."
        echo "📦 Built files:"
        ls -la dist/
        echo ""
        echo "🚀 DEPLOYMENT PREVIEW:"
        echo "When this PR is merged, the game will be deployed to:"
        echo "🎮 https://jonathanjohnson023.github.io/First-Reality"
        echo ""
        echo "📊 Bundle Analysis:"
        echo "- Bundle Size: $(du -h dist/bundle.js | cut -f1)"
        echo "- Total Assets: $(ls dist/ | wc -l) files"
        echo "- Ready for production: ✅"
        
    - name: Comment PR with deployment info
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const bundleSize = fs.statSync('dist/bundle.js').size;
          const bundleSizeKB = Math.round(bundleSize / 1024 * 10) / 10;
          
          const branchName = context.payload.pull_request.head.ref;
          const previewUrl = `https://jonathanjohnson023.github.io/First-Reality/preview/${branchName}/`;
          
          const comment = `## 🚀 Deployment Preview Ready!
          
          ### ✅ Build Status: **SUCCESS**
          - **Bundle Size**: ${bundleSizeKB}KB (optimized)
          - **Build Time**: ${new Date().toLocaleString()}
          - **Status**: Ready for deployment 🎯
          
          ### 🎮 **Test Your Changes**
          **Feature Branch Preview**: [${previewUrl}](${previewUrl})
          
          🔍 **Testing Checklist**:
          - [ ] Game loads and starts correctly
          - [ ] Audio controls work (volume slider, mute button)
          - [ ] Combat system functions properly
          - [ ] Save/load system works
          - [ ] Mobile touch controls responsive
          - [ ] All animations smooth
          
          ### 🎮 **When Merged**
          Production deployment: **https://jonathanjohnson023.github.io/First-Reality**
          
          ### 🌟 **New Features Included**
          - 🔊 Professional audio system (15+ sound effects)
          - 💾 Advanced save system with auto-save
          - 📱 Mobile touch controls
          - ⚔️ 99-level progression system
          - 🎨 Premium animations and effects
          - 🔇 Auto-mute title screen
          - 🎚️ Volume slider controls
          
          ### 📊 **Performance**
          - **Load Time**: Optimized for fast loading
          - **Mobile Ready**: Touch controls implemented
          - **Cross-Browser**: Compatible with modern browsers
          
          **Test the preview, then merge to deploy to production!** 🚀`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });