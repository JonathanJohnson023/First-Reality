name: Environment Deployments

on:
  pull_request:
    types: [closed]
    branches: [ dev, stage, master ]

# Global permissions
permissions:
  contents: write
  pages: write
  id-token: write
  actions: write

jobs:
  deploy-to-dev:
    if: github.event.pull_request.merged == true && github.base_ref == 'dev'
    runs-on: ubuntu-latest
      
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install --legacy-peer-deps
      
    - name: Run tests
      run: npm test
      
    - name: Build project
      run: NODE_OPTIONS="--openssl-legacy-provider" npm run build
      
    - name: Prepare dev deployment
      run: |
        mkdir -p dev-deploy
        cp index.html dev-deploy/
        cp -r dist/ dev-deploy/
        cp -r styles/ dev-deploy/
        cp -r assets/ dev-deploy/ || echo "Assets not found"
        cp *.png dev-deploy/ || echo "PNG files not found"
        touch dev-deploy/.nojekyll
        
        # Add dev environment banner
        sed -i 's|<title>First Reality</title>|<title>First Reality - DEV</title>|g' dev-deploy/index.html
        sed -i 's|<body>|<body><div style="position:fixed;top:0;left:0;width:100%;background:#ff9800;color:black;text-align:center;padding:8px;z-index:10000;font-weight:bold;">🔧 DEV ENVIRONMENT 🔧</div><div style="height:40px;"></div>|g' dev-deploy/index.html
        
    - name: Deploy to dev environment
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dev-deploy
        destination_dir: dev
        keep_files: true
        enable_jekyll: false
        commit_message: "🔧 Deploy to dev environment - PR #${{ github.event.number }}"
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'
        
    - name: Verify dev deployment
      run: |
        sleep 90
        DEV_URL="https://jonathanjohnson023.github.io/First-Reality/dev/"
        HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" "$DEV_URL")
        
        if [ "$HTTP_CODE" = "200" ]; then
          echo "✅ Dev environment deployed successfully!"
          echo "🔧 Dev URL: $DEV_URL"
        else
          echo "⚠️ Dev deployment verification pending (GitHub Pages propagation)"
          echo "🔧 Dev URL: $DEV_URL"
        fi

  deploy-to-stage:
    if: github.event.pull_request.merged == true && github.base_ref == 'stage'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
      
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install --legacy-peer-deps
      
    - name: Run full test suite
      run: |
        npm test
        npm run test:unit || echo "Unit tests not implemented yet"
        npm run test:e2e || echo "E2E tests not implemented yet"
      
    - name: Build project
      run: NODE_OPTIONS="--openssl-legacy-provider" npm run build
      
    - name: Prepare stage deployment
      run: |
        mkdir -p stage-deploy
        cp index.html stage-deploy/
        cp -r dist/ stage-deploy/
        cp -r styles/ stage-deploy/
        cp -r assets/ stage-deploy/ || echo "Assets not found"
        cp *.png stage-deploy/ || echo "PNG files not found"
        touch stage-deploy/.nojekyll
        
        # Add stage environment banner
        sed -i 's|<title>First Reality</title>|<title>First Reality - STAGING</title>|g' stage-deploy/index.html
        sed -i 's|<body>|<body><div style="position:fixed;top:0;left:0;width:100%;background:#2196F3;color:white;text-align:center;padding:8px;z-index:10000;font-weight:bold;">🚀 STAGING ENVIRONMENT 🚀</div><div style="height:40px;"></div>|g' stage-deploy/index.html
        
    - name: Deploy to stage environment
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./stage-deploy
        destination_dir: stage
        keep_files: true
        enable_jekyll: false
        commit_message: "🚀 Deploy to stage environment - PR #${{ github.event.number }}"
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'
        
    - name: Verify stage deployment
      run: |
        sleep 90
        STAGE_URL="https://jonathanjohnson023.github.io/First-Reality/stage/"
        HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" "$STAGE_URL")
        
        if [ "$HTTP_CODE" = "200" ]; then
          echo "✅ Stage environment deployed successfully!"
          echo "🚀 Stage URL: $STAGE_URL"
        else
          echo "⚠️ Stage deployment verification pending (GitHub Pages propagation)"
          echo "🚀 Stage URL: $STAGE_URL"
        fi