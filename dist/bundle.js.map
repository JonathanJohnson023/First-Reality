{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/menu.js","webpack:///./src/char.js","webpack:///./src/monster.js","webpack:///./src/game.js","webpack:///./src/tutorial.js","webpack:///./src/game_view.js","webpack:///./src/save_system.js","webpack:///./src/sound_system.js","webpack:///./src/character_progression.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","querySelec","menuId","this","tokenMenu","cursor","document","createElement","className","src","divShadow","cursorMove","Audio","volume","cursorSelect","menuItems","querySelectorAll","selectMouseOver","keyPressed","selectMouseClick","e","preventDefault","target","parentNode","id","parseInt","getAttribute","selection","play","keyCode","prepend","selectedNumber","Character","job","ctx","sprite","index","level","maxHealth","health","KO","frame","forward","back","partyHpUi","getElementById","getContext","font","spriteHeight","canvasX","canvas","width","canvasY","height","heightFloat","Math","abs","callback","walkForward","walkBack","drawImage","clearRect","fillText","isOdd","monster","console","log","damage","floor","random","showDamage","damageText","textContent","style","position","color","fontSize","fontWeight","zIndex","pointerEvents","left","top","transform","animation","body","appendChild","setTimeout","removeChild","int","num","Number","toString","replace","parseFloat","Monster","Image","monsterHpUi","smallMonsters","medMonsters","save","globalAlpha","restore","healthPercent","fillStyle","party","enemies","wave","currentChar","currentCharIndex","aniDone","partyMenu","battleState","turnQueue","currentTurn","actionInProgress","draw","charIndexIncrease","processTurn","window","innerWidth","innerHeight","fillRect","drawBackground","addSprites","drawMonsters","addEventListener","backgroundColor","titleMenu","knight","cleric","archer","wizard","push","addEnemy","menu","partySelectEventCallback","classList","contains","type","onSelect","background","forEach","obj","selectedAction","innerText","performAttack","performDefend","aliveEnemies","filter","enemy","isAlive","length","checkBattleEnd","targetEnemy","attack","nextTurn","defending","enemyTurn","aliveParty","char","enemyIndex","enemyAttackInterval","setInterval","clearInterval","showVictoryScreen","showDefeatScreen","alert","resetBattle","numEnemies","Tutorial","GameRouter","game","tutorial","menuCtx","lastTime","title","time","selectEventCallback","select","titleAudio","remove","add","pause","start","once","requestAnimationFrame","gameAnimate","Menu","SaveSystem","saveKey","defaultSave","version","timestamp","Date","now","player","experience","gold","playtime","defense","magic","speed","equipment","weapon","armor","accessory","skills","inventory","items","quantity","weapons","accessories","progress","currentWave","battlesWon","enemiesDefeated","achievements","unlockedFeatures","settings","sfxVolume","difficulty","autoSave","showDamageNumbers","animationSpeed","statistics","totalPlaytime","totalBattles","totalDamageDealt","totalDamageReceived","highestDamage","itemsUsed","magicCast","gameData","saveData","localStorage","setItem","JSON","stringify","createBackup","showSaveNotification","error","savedData","getItem","parse","migrateSave","backupKey","warn","backupData","oldSave","migratedSave","saveGame","removeItem","loadGame","exportData","blob","Blob","url","URL","createObjectURL","a","href","download","toISOString","split","click","revokeObjectURL","file","Promise","resolve","reject","reader","FileReader","onload","importData","result","validateSave","Error","readAsText","every","field","gameInstance","interval","autoSaveInterval","getGameData","message","notification","assign","padding","borderRadius","fontFamily","boxShadow","saveExists","hasSaveData","playerLevel","formatPlaytime","lastSaved","toLocaleString","milliseconds","hours","minutes","seconds","SoundSystem","audioContext","masterVolume","musicVolume","isMuted","sounds","Map","music","currentMusic","fadeInterval","initializeAudioContext","createSoundEffects","AudioContext","webkitAudioContext","masterGain","createGain","connect","destination","gain","musicGain","sfxGain","set","createSwordSlash","createMagicCast","createBowShot","createStaffHit","createMenuSelect","createMenuConfirm","createMenuCancel","createEnemyHit","createCriticalHit","createHealSound","createLevelUp","createVictory","createDefeat","createFootstep","createDoorOpen","createItemGet","soundName","pitch","soundGenerator","oscillator","createOscillator","gainNode","createBiquadFilter","frequency","setValueAtTime","currentTime","exponentialRampToValueAtTime","stop","delay","createDelay","linearRampToValueAtTime","delayTime","Q","freq","max","min","muted","audioElement","fadeInTime","fadeOutMusic","playPromise","then","fadeInMusic","catch","duration","targetVolume","stepTime","volumeStep","currentStep","initialVolume","fadeOut","state","resume","supported","close","CharacterProgression","experienceTable","generateExperienceTable","skillTrees","createSkillTrees","createEquipmentDatabase","createAchievements","table","baseXP","pow","Knight","description","mpCost","levelRequired","prerequisites","effect","damageMultiplier","attackBoost","defenseReduction","damageReduction","forceTaunt","damageRedirect","Cleric","healAmount","revive","hpPercent","defenseBoost","Archer","accuracy","criticalChance","shots","accuracyBoost","criticalBoost","poisonDamage","Wizard","element","stunChance","slowEffect","manaShield","magicBoost","mpRegen","class","price","special","holyDamage","criticalRate","fireResistance","magicDefense","icon","reward","item","currentLevel","currentExp","character","oldLevel","newLevel","getLevelFromExperience","levelDiff","statGains","calculateStatGains","newSkills","getNewSkills","leveledUp","levels","baseGains","gains","skillTree","values","skill","skillId","keys","find","includes","prereq","totalStats","action","newAchievements","achievement","earned","some","existingItem","equipmentStats","applyEquipmentStats","canLearnSkill","saveSystem","soundSystem","progression","menuClass","enemiesUi","partyUi","theGame","gameRouter","titleScreenBool","titleScreen","titleMusic"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default class Menu {\n  constructor(querySelec, menuId){\n    this.tokenMenu = 0\n    this.menuId = menuId\n\n    this.cursor = document.createElement('img');\n      this.cursor.className = 'selected';\n      this.cursor.src = 'https://www.dropbox.com/s/1pq4d1ksjv3tuoz/FF7Cursor.png?raw=1';\n\n    this.divShadow = document.createElement('div'); //shadow of the hand cursor.\n      this.divShadow.className = 'shadow';\n\n    this.cursorMove = new Audio(); //move sound.\n      this.cursorMove.src =\"https://www.dropbox.com/s/fiyx4q2mdwynraj/FF7CursorMove.mp3?raw=1\";\n      this.cursorMove.volume = 0.4\n      \n    this.cursorSelect = new Audio();\n      this.cursorSelect.src = 'https://www.dropbox.com/s/v04ewrevpnnsz03/FF7CursorSaveLoad.mp3?raw=1';\n      this.cursorSelect.volume = 0.4\n\n    this.menuItems = document.querySelectorAll(`${querySelec}`);\n\n    this.selectMouseOver = this.selectMouseOver.bind(this);\n    this.keyPressed = this.keyPressed.bind(this);\n    this.selectMouseClick = this.selectMouseClick.bind(this);\n\n  }\n\n  selectMouseOver(e){\n    e.preventDefault();\n    if(e.target.parentNode.id == this.menuId){\n      this.tokenMenu = parseInt(e.target.getAttribute(\"number\"));\n      this.selection(this.tokenMenu);\n      this.cursorMove.play();\n    }\n  }\n\n  selectMouseClick(e){\n    e.preventDefault();\n    if(e.target.parentNode.id == this.menuId){\n      this.tokenMenu = parseInt(e.target.getAttribute(\"number\"));\n      this.cursorSelect.play();\n      return this.menuItems[this.tokenMenu]\n    }\n  }\n\n  keyPressed(e){\n    e.preventDefault();\n    if(e.keyCode == 38){  //ArrowUp\n      this.tokenMenu > 0 ? this.tokenMenu -=1 : this.tokenMenu = 1\n      this.selection(this.tokenMenu);\n      this.cursorMove.play();\n    } else if(e.keyCode == 40){ //ArrowDown\n      this.tokenMenu < 1 ? this.tokenMenu +=1 : this.tokenMenu = 0\n      this.selection(this.tokenMenu);\n      this.cursorMove.play();\n    } else if(e.keyCode == 13){\n      this.cursorSelect.play();\n      return this.menuItems[this.tokenMenu]\n    }\n  }\n\n  selection(tokenMenu){\n    this.menuItems[tokenMenu].prepend(this.cursor); //Prepend element before the selected target.\n    this.menuItems[tokenMenu].prepend(this.divShadow); \n  }\n\n  select(selectedNumber){\n    return this.menuItems[selectedNumber]\n  }\n\n}","export default class Character {\n  constructor(job, ctx, sprite, index){\n    this.level = 1;\n    this.maxHealth = 100\n    this.health = this.maxHealth;\n    this.KO = false;\n    this.job = job;\n    this.ctx = ctx;\n    this.sprite = sprite;\n    this.index = index;\n    this.frame = 0;\n    this.forward = false;\n    this.back = false;\n    this.partyHpUi = document.getElementById(\"party-ui\").getContext(\"2d\");\n    this.partyHpUi.font = \"26px Final Fantasy\";\n    this.spriteHeight(index);\n    this.canvasX = this.ctx.canvas.width * 0.85;\n    this.canvasY = this.ctx.canvas.height * this.heightFloat + this.ctx.canvas.height * 0.3;\n\n  }\n\n  isOdd(n){\n    return Math.abs(n % 2) == 1;\n  }\n\n  draw(callback){\n    if(this.forward && this.frame <= 9){\n      this.walkForward(callback);\n    }else if(this.back && this.frame >= 1 ){\n      this.walkBack();\n    }else{\n      this.ctx.drawImage(this.sprite, 0, 0, 64, 64, this.canvasX, this.canvasY , 125, 125 )\n    }\n    this.partyHpUi.clearRect(0, (this.index) * (this.partyHpUi.canvas.height / 4), this.partyHpUi.canvas.width, this.partyHpUi.canvas.height)\n    this.partyHpUi.fillText(this.job, 25, (this.index + 1) * (this.partyHpUi.canvas.height / 4))\n    this.partyHpUi.fillText(`${this.health} / ${this.maxHealth}`, this.partyHpUi.canvas.width - 125, (this.index + 1) * (this.partyHpUi.canvas.height / 4))\n\n  }\n\n  walkForward(callback){\n    this.frame++\n    if(this.isOdd(this.frame)){\n      this.ctx.drawImage(this.sprite, 64, 0, 64, 64, this.canvasX -= parseInt(this.frame + \"0\"), this.canvasY , 125, 125 )\n    }else if(this.frame <= 9){\n      this.ctx.drawImage(this.sprite, 0, 0, 64, 64, this.canvasX -= parseInt(this.frame + \"0\"), this.canvasY , 125, 125 )\n    }\n    if (this.frame == 10){\n        callback()\n    }\n\n  }\n\n  walkBack(){\n    this.frame--\n      if(this.isOdd(this.frame)){\n        this.ctx.drawImage(this.sprite, 64, 0, 64, 64, this.canvasX += parseInt(this.frame + \"0\"), this.canvasY , 125, 125 )\n      }else if(this.frame >= 1){\n        this.ctx.drawImage(this.sprite, 0, 0, 64, 64, this.canvasX += parseInt(this.frame + \"0\"), this.canvasY , 125, 125 )\n      }\n  }\n\n  // walkingCaller(callback){ \n  //     if( this.frame < 10 ){\n  //       this.walkForward(callback);\n  //     }else if( this.frame > 0){\n  //       this.walkBack(callback);\n  //     }\n  // }\n\n  attack(monster){\n    if (monster.health <= 0) {\n      console.log('Monster is already dead!');\n      return;\n    }\n    \n    const damage = Math.floor(Math.random() * 30) + 15; // 15-45 damage\n    monster.health -= damage;\n    \n    if (monster.health <= 0) {\n      monster.health = 0;\n      monster.KO = true;\n      console.log(`Monster defeated! Dealt ${damage} damage.`);\n    } else {\n      console.log(`Dealt ${damage} damage to monster. Monster health: ${monster.health}`);\n    }\n    \n    // Add visual feedback\n    this.showDamage(damage);\n  }\n  \n  showDamage(damage) {\n    // Create damage text element\n    const damageText = document.createElement('div');\n    damageText.textContent = `-${damage}`;\n    damageText.style.position = 'absolute';\n    damageText.style.color = '#ff4444';\n    damageText.style.fontSize = '24px';\n    damageText.style.fontWeight = 'bold';\n    damageText.style.zIndex = '1000';\n    damageText.style.pointerEvents = 'none';\n    damageText.style.left = '50%';\n    damageText.style.top = '30%';\n    damageText.style.transform = 'translateX(-50%)';\n    damageText.style.animation = 'damageFloat 1.5s ease-out forwards';\n    \n    document.body.appendChild(damageText);\n    \n    // Remove after animation\n    setTimeout(() => {\n      if (damageText.parentNode) {\n        damageText.parentNode.removeChild(damageText);\n      }\n    }, 1500);\n  }\n\n  spriteHeight(int){\n    let numFloat = int + int * 0.5\n    let num = Number(numFloat.toString().replace('.',''))\n    this.heightFloat = parseFloat(`0.${num}`)\n  }\n\n\n}","export default class Monster {\n  constructor(ctx, index){\n    this.level = 1;\n    this.maxHealth = 100;\n    this.health = this.maxHealth;\n    this.KO = false;\n    // this.type = type;\n    this.ctx = ctx;\n    this.sprite = new Image();\n      this.sprite.src = \"Final_Fantasy_1_Enemies & Bosses.png\"\n    this.index = index;\n    this.frame = 0;\n    this.monsterHpUi = document.getElementById(\"enemies-ui\").getContext(\"2d\");\n    this.monsterHpUi.font = \"26px Final Fantasy\";\n    this.spriteHeight(index)\n    this.canvasX = this.ctx.canvas.width / 8\n    this.canvasY = this.ctx.canvas.height * this.heightFloat + this.ctx.canvas.height / 3.5 \n\n    this.smallMonsters = [\n      [0, 0, 36, 64]\n    ]\n\n    this.medMonsters = [\n\n    ]\n\n  };\n\n\n  draw(){\n    // Only draw if alive\n    if (!this.KO && this.health > 0) {\n      this.ctx.drawImage(this.sprite, ...this.smallMonsters[0], this.canvasX, this.canvasY, 125, 200);\n    } else {\n      // Draw grayed out or don't draw at all\n      this.ctx.save();\n      this.ctx.globalAlpha = 0.3;\n      this.ctx.drawImage(this.sprite, ...this.smallMonsters[0], this.canvasX, this.canvasY, 125, 200);\n      this.ctx.restore();\n    }\n    \n    this.monsterHpUi.clearRect(0, (this.index) * (this.monsterHpUi.canvas.height / 4), this.monsterHpUi.canvas.width, this.monsterHpUi.canvas.height);\n    \n    // Color code the health text\n    const healthPercent = this.health / this.maxHealth;\n    if (healthPercent > 0.6) {\n      this.monsterHpUi.fillStyle = '#00ff00'; // Green\n    } else if (healthPercent > 0.3) {\n      this.monsterHpUi.fillStyle = '#ffff00'; // Yellow\n    } else {\n      this.monsterHpUi.fillStyle = '#ff0000'; // Red\n    }\n    \n    this.monsterHpUi.fillText(`Monster ${this.index + 1}`, 25, (this.index + 1) * (this.monsterHpUi.canvas.height / 4));\n    this.monsterHpUi.fillText(`${this.health} / ${this.maxHealth}`, this.monsterHpUi.canvas.width - 125, (this.index + 1) * (this.monsterHpUi.canvas.height / 4));\n    \n    // Reset color\n    this.monsterHpUi.fillStyle = '#ffffff';\n  }\n\n  death(){\n    this.KO = true;\n    this.health = 0;\n    // Add death animation or effects here\n    console.log(`Monster ${this.index + 1} has been defeated!`);\n  }\n  \n  attack(target) {\n    if (this.KO || this.health <= 0) {\n      return;\n    }\n    \n    const damage = Math.floor(Math.random() * 20) + 10; // 10-30 damage\n    target.health -= damage;\n    \n    if (target.health <= 0) {\n      target.health = 0;\n      target.KO = true;\n      console.log(`${target.job} has been defeated! Monster dealt ${damage} damage.`);\n    } else {\n      console.log(`Monster dealt ${damage} damage to ${target.job}. ${target.job} health: ${target.health}`);\n    }\n    \n    return damage;\n  }\n  \n  isAlive() {\n    return !this.KO && this.health > 0;\n  }\n\n\n\n  spriteHeight(int){\n    let numFloat = int + int * 0.5\n    let num = Number(numFloat.toString().replace('.',''))\n    this.heightFloat = parseFloat(`0.${num}`)\n  }\n\n}\n\n\n\n","import Sprite from \"./char\"\nimport Monster from \"./monster\"\nimport Menu from \"./menu\"\nexport default class Game {\n  constructor(ctx){\n    this.party = [];\n    this.enemies = [];\n    this.wave = 0;\n    this.currentChar = null;\n    this.currentCharIndex = 0;\n    this.ctx = ctx;\n    this.frame = 0;\n    this.aniDone = false;\n    this.partyMenu = new Menu(\"#party-moves li\", \"party-moves\");\n    this.wave = 0;\n    this.battleState = 'player-turn'; // 'player-turn', 'enemy-turn', 'victory', 'defeat'\n    this.turnQueue = [];\n    this.currentTurn = 0;\n    this.actionInProgress = false;\n\n    this.draw = this.draw.bind(this);\n    this.charIndexIncrease = this.charIndexIncrease.bind(this);\n    this.processTurn = this.processTurn.bind(this);\n  }\n\n  draw(){\n    this.currentChar = this.party[this.currentCharIndex]\n    this.ctx.width  = window.innerWidth;\n    this.ctx.height = window.innerHeight;\n    this.ctx.clearRect(0, 0, this.ctx.width, this.ctx.height);\n    this.ctx.fillStyle = \"black\";\n    this.ctx.fillRect(0, 0, this.ctx.width, this.ctx.height);\n    \n    this.drawBackground();\n    this.addSprites();\n    this.drawMonsters();\n    document.body.addEventListener(\"animationend\" , () => {\n      document.body.style.backgroundColor = \"black\";\n      this.aniDone = true;\n       if(this.currentChar) this.currentChar.forward = true;\n    })\n  }\n\n  start(titleMenu){\n    const knight = new Sprite(\"Knight\", this.ctx, null, 0);\n    const cleric = new Sprite(\"Cleric\", this.ctx, null, 1);\n    const archer = new Sprite(\"Archer\", this.ctx, null, 2);\n    const wizard = new Sprite(\"Wizard\", this.ctx, null, 3);\n    this.party.push(knight, cleric, archer, wizard);\n    this.addEnemy()\n    // this.createMonsters();\n    // document.removeEventListener(\"keydown\")\n    const menu = document.getElementById(\"party-moves\");\n    menu.addEventListener('mouseover', this.partyMenu.selectMouseOver);\n    menu.addEventListener('click', (e) => { this.partySelectEventCallback(e) });\n    document.addEventListener('keydown', (e) => { this.partySelectEventCallback(e) });\n    this.partyMenu.selection(0);\n\n  }\n\n  partySelectEventCallback(e){\n    const menu = document.getElementById(\"party-moves\");\n    if(e.keyCode == 13 && !menu.classList.contains(\"none\")){\n      this.onSelect(this.partyMenu.keyPressed(e));\n    }else if(e.type == \"click\"){\n      this.onSelect(this.partyMenu.selectMouseClick(e));\n    }else{\n      return this.partyMenu.keyPressed(e)\n    }\n  };\n  \n  drawBackground(){\n    const background = new Image()\n      background.src = \"battle_backgrounds.png\"\n    this.ctx.drawImage(background, 522, 5, 270, 155, 0, 0, this.ctx.width, this.ctx.height)\n  }\n\n  addSprites(){\n    this.party.forEach((obj, index) => {\n      let sprite = new Image();\n        sprite.src = `image${index}.png`;\n      obj.sprite = sprite;\n      obj.index = index;\n\n      obj.draw(this.charIndexIncrease);\n    })\n  }\n\n  drawMonsters(){\n    this.enemies.forEach((obj, index) => {\n      obj.draw();\n    })\n  }\n\n  onSelect(selection){\n    if (this.actionInProgress || this.battleState !== 'player-turn') {\n      return;\n    }\n    \n    this.actionInProgress = true;\n    const selectedAction = selection.innerText;\n    \n    if (selectedAction === 'Attack') {\n      this.performAttack();\n    } else if (selectedAction === 'Defend') {\n      this.performDefend();\n    }\n  }\n  \n  performAttack() {\n    // Find alive enemies\n    const aliveEnemies = this.enemies.filter(enemy => enemy.isAlive());\n    if (aliveEnemies.length === 0) {\n      this.checkBattleEnd();\n      return;\n    }\n    \n    // Attack random alive enemy\n    const targetEnemy = aliveEnemies[Math.floor(Math.random() * aliveEnemies.length)];\n    \n    this.currentChar.back = false;\n    this.currentChar.forward = true;\n    this.currentChar.attack(targetEnemy);\n    \n    // After attack animation, proceed to next turn\n    setTimeout(() => {\n      this.currentChar.back = true;\n      this.currentChar.forward = false;\n      this.actionInProgress = false;\n      this.nextTurn();\n    }, 1000);\n  }\n  \n  performDefend() {\n    console.log(`${this.currentChar.job} is defending!`);\n    // Defending reduces incoming damage by 50% for this turn\n    this.currentChar.defending = true;\n    \n    setTimeout(() => {\n      this.actionInProgress = false;\n      this.nextTurn();\n    }, 500);\n  }\n  \n  nextTurn() {\n    if (this.checkBattleEnd()) {\n      return;\n    }\n    \n    this.charIndexIncrease();\n    \n    // Check if all party members have acted\n    if (this.currentCharIndex === 0) {\n      this.battleState = 'enemy-turn';\n      this.enemyTurn();\n    }\n  }\n  \n  enemyTurn() {\n    const aliveEnemies = this.enemies.filter(enemy => enemy.isAlive());\n    const aliveParty = this.party.filter(char => !char.KO);\n    \n    if (aliveEnemies.length === 0 || aliveParty.length === 0) {\n      this.checkBattleEnd();\n      return;\n    }\n    \n    let enemyIndex = 0;\n    const enemyAttackInterval = setInterval(() => {\n      if (enemyIndex >= aliveEnemies.length) {\n        clearInterval(enemyAttackInterval);\n        // Reset defending status\n        this.party.forEach(char => char.defending = false);\n        this.battleState = 'player-turn';\n        return;\n      }\n      \n      const enemy = aliveEnemies[enemyIndex];\n      const target = aliveParty[Math.floor(Math.random() * aliveParty.length)];\n      \n      if (target && !target.KO) {\n        let damage = enemy.attack(target);\n        if (target.defending) {\n          damage = Math.floor(damage * 0.5);\n          target.health += Math.floor(damage * 0.5); // Restore half damage\n          console.log(`${target.job} defended and reduced damage!`);\n        }\n      }\n      \n      enemyIndex++;\n    }, 1000);\n  }\n  \n  checkBattleEnd() {\n    const aliveEnemies = this.enemies.filter(enemy => enemy.isAlive());\n    const aliveParty = this.party.filter(char => !char.KO && char.health > 0);\n    \n    if (aliveEnemies.length === 0) {\n      this.battleState = 'victory';\n      console.log('Victory! All enemies defeated!');\n      this.showVictoryScreen();\n      return true;\n    }\n    \n    if (aliveParty.length === 0) {\n      this.battleState = 'defeat';\n      console.log('Defeat! All party members have fallen!');\n      this.showDefeatScreen();\n      return true;\n    }\n    \n    return false;\n  }\n  \n  showVictoryScreen() {\n    // Add victory screen logic\n    setTimeout(() => {\n      alert('Victory! You defeated all enemies!');\n      this.resetBattle();\n    }, 1000);\n  }\n  \n  showDefeatScreen() {\n    // Add defeat screen logic\n    setTimeout(() => {\n      alert('Defeat! Game Over!');\n      this.resetBattle();\n    }, 1000);\n  }\n  \n  resetBattle() {\n    // Reset party health\n    this.party.forEach(char => {\n      char.health = char.maxHealth;\n      char.KO = false;\n      char.defending = false;\n    });\n    \n    // Generate new enemies\n    this.enemies = [];\n    this.addEnemy();\n    \n    this.currentCharIndex = 0;\n    this.battleState = 'player-turn';\n    this.actionInProgress = false;\n  }\n\n  addEnemy(){\n    const numEnemies = Math.floor(Math.random() * 4) + 1\n    for (let index = 0; index < numEnemies; index++){\n      const monster = new Monster(this.ctx, index);\n      this.enemies.push(monster)\n    }\n\n  }\n\n  charIndexIncrease(){\n    // Skip KO'd characters\n    do {\n      this.currentCharIndex >= 3 ? this.currentCharIndex = 0 : this.currentCharIndex++;\n    } while (this.party[this.currentCharIndex] && this.party[this.currentCharIndex].KO);\n  }\n  \n\n\n}","export default class Tutorial{\n  constructor(menu){\n    this.menu = menu\n  }\n\n  start(){\n    console.log(this.menu)\n    this.menu\n  }\n\n  \n}","export default class GameRouter {\n  constructor(menu,game,tutorial,canvas){  \n    this.menu = menu;\n    this.game = game;\n    this.tutorial = tutorial;\n    this.ctx = canvas.getContext(\"2d\");\n    this.menuCtx = canvas.getContext(\"2d\")\n    this.lastTime = 0;\n    this.title = document.getElementById(\"title-screen-text-wrapper\")\n    this.time = 0\n  }\n\n\n  start(){\n    const menu = document.getElementById(\"menu\")\n    menu.addEventListener('mouseover', this.menu.selectMouseOver)\n    menu.addEventListener('click', (e) => { this.selectEventCallback(e) })\n    document.addEventListener('keydown', (e) => { this.selectEventCallback(e) })\n\n  }\n\n  selectEventCallback(e){\n    const menu = document.getElementById(\"menu\")\n    if(e.keyCode == 13 && !menu.classList.contains(\"none\")){\n      this.select(this.menu.keyPressed(e))\n    }else if(e.type == \"click\"){\n      this.select(this.menu.selectMouseClick(e))\n    }else{\n      return this.menu.keyPressed(e)\n    }\n  }\n\n  select(selection){\n    if (selection.innerText === \"Start Game\" ) {\n      const titleAudio = document.getElementById(\"title-audio\")\n      this.title.classList.remove(\"appearing\");\n      this.title.classList.add(\"disappearing\");\n      titleAudio.volume = 0.3\n      this.game.ctx = this.ctx\n      \n      this.title.addEventListener(\"animationend\", () => {\n        this.title.classList.add(\"none\");\n        titleAudio.pause();      \n        document.getElementById(\"battleView\").classList.remove(\"none\");\n        this.game.start(this.menu);\n      }, {once: true})\n      requestAnimationFrame(this.gameAnimate.bind(this));\n\n    }else if(selection.innerText === \"How To Play\"){\n      const menu = new Menu(\"\")\n      this.tutorial.start(menu)\n    }else{\n    }\n    // this.game.onSelect()\n  }\n\n  gameAnimate(time) {\n    // const timeDelta = time - this.lastTime;\n    this.time++\n    // this.game.step(timeDelta);\n    if(this.time > 17){\n      if(this.game.aniDone){ \n        this.game.frame++\n      }\n      this.time = 0\n      this.game.draw();\n    }\n    // this.game.drawBackground(this.ctx);\n    this.lastTime = time;\n\n    // every call to animate requests causes another call to animate\n    requestAnimationFrame(this.gameAnimate.bind(this));\n  };\n\n\n}","// Advanced Save System with Local Storage\nexport default class SaveSystem {\n  constructor() {\n    this.saveKey = 'first_reality_save_v2';\n    this.defaultSave = {\n      version: '2.0.0',\n      timestamp: Date.now(),\n      player: {\n        name: 'Hero',\n        level: 1,\n        experience: 0,\n        gold: 100,\n        playtime: 0\n      },\n      party: [\n        {\n          name: 'Knight',\n          job: 'Knight',\n          level: 1,\n          experience: 0,\n          maxHealth: 100,\n          health: 100,\n          attack: 25,\n          defense: 20,\n          magic: 5,\n          speed: 15,\n          equipment: {\n            weapon: 'Iron Sword',\n            armor: 'Leather Armor',\n            accessory: null\n          },\n          skills: ['Slash', 'Guard']\n        },\n        {\n          name: 'Cleric',\n          job: 'Cleric',\n          level: 1,\n          experience: 0,\n          maxHealth: 80,\n          health: 80,\n          attack: 15,\n          defense: 15,\n          magic: 30,\n          speed: 12,\n          equipment: {\n            weapon: 'Oak Staff',\n            armor: 'Robe',\n            accessory: null\n          },\n          skills: ['Heal', 'Bless']\n        },\n        {\n          name: 'Archer',\n          job: 'Archer',\n          level: 1,\n          experience: 0,\n          maxHealth: 90,\n          health: 90,\n          attack: 20,\n          defense: 12,\n          magic: 10,\n          speed: 25,\n          equipment: {\n            weapon: 'Short Bow',\n            armor: 'Leather Vest',\n            accessory: null\n          },\n          skills: ['Arrow Shot', 'Aim']\n        },\n        {\n          name: 'Wizard',\n          job: 'Wizard',\n          level: 1,\n          experience: 0,\n          maxHealth: 70,\n          health: 70,\n          attack: 10,\n          defense: 8,\n          magic: 35,\n          speed: 18,\n          equipment: {\n            weapon: 'Magic Wand',\n            armor: 'Mage Robe',\n            accessory: null\n          },\n          skills: ['Fire', 'Lightning']\n        }\n      ],\n      inventory: {\n        items: [\n          { name: 'Potion', quantity: 5, type: 'healing', value: 50 },\n          { name: 'Ether', quantity: 3, type: 'mana', value: 30 }\n        ],\n        weapons: [],\n        armor: [],\n        accessories: []\n      },\n      progress: {\n        currentWave: 1,\n        battlesWon: 0,\n        enemiesDefeated: 0,\n        achievements: [],\n        unlockedFeatures: []\n      },\n      settings: {\n        volume: 30,\n        sfxVolume: 50,\n        difficulty: 'normal',\n        autoSave: true,\n        showDamageNumbers: true,\n        animationSpeed: 'normal'\n      },\n      statistics: {\n        totalPlaytime: 0,\n        totalBattles: 0,\n        totalDamageDealt: 0,\n        totalDamageReceived: 0,\n        highestDamage: 0,\n        itemsUsed: 0,\n        magicCast: 0\n      }\n    };\n  }\n\n  // Save game data\n  saveGame(gameData) {\n    try {\n      const saveData = {\n        ...this.defaultSave,\n        ...gameData,\n        timestamp: Date.now(),\n        version: '2.0.0'\n      };\n      \n      localStorage.setItem(this.saveKey, JSON.stringify(saveData));\n      this.createBackup(saveData);\n      \n      console.log('✅ Game saved successfully!');\n      this.showSaveNotification('Game Saved!', 'success');\n      return true;\n    } catch (error) {\n      console.error('❌ Failed to save game:', error);\n      this.showSaveNotification('Save Failed!', 'error');\n      return false;\n    }\n  }\n\n  // Load game data\n  loadGame() {\n    try {\n      const savedData = localStorage.getItem(this.saveKey);\n      if (!savedData) {\n        console.log('📝 No save data found, starting new game');\n        return this.defaultSave;\n      }\n\n      const gameData = JSON.parse(savedData);\n      \n      // Version migration if needed\n      if (gameData.version !== '2.0.0') {\n        console.log('🔄 Migrating save data...');\n        return this.migrateSave(gameData);\n      }\n\n      console.log('✅ Game loaded successfully!');\n      this.showSaveNotification('Game Loaded!', 'success');\n      return gameData;\n    } catch (error) {\n      console.error('❌ Failed to load game:', error);\n      this.showSaveNotification('Load Failed! Starting new game.', 'warning');\n      return this.defaultSave;\n    }\n  }\n\n  // Create backup save\n  createBackup(saveData) {\n    try {\n      const backupKey = this.saveKey + '_backup';\n      localStorage.setItem(backupKey, JSON.stringify(saveData));\n    } catch (error) {\n      console.warn('⚠️ Failed to create backup:', error);\n    }\n  }\n\n  // Load backup if main save is corrupted\n  loadBackup() {\n    try {\n      const backupKey = this.saveKey + '_backup';\n      const backupData = localStorage.getItem(backupKey);\n      if (backupData) {\n        console.log('🔄 Loading backup save...');\n        return JSON.parse(backupData);\n      }\n    } catch (error) {\n      console.error('❌ Failed to load backup:', error);\n    }\n    return this.defaultSave;\n  }\n\n  // Migrate old save format\n  migrateSave(oldSave) {\n    console.log('🔄 Migrating save from version', oldSave.version || '1.0.0');\n    \n    const migratedSave = {\n      ...this.defaultSave,\n      ...oldSave,\n      version: '2.0.0',\n      timestamp: Date.now()\n    };\n\n    // Save migrated data\n    this.saveGame(migratedSave);\n    return migratedSave;\n  }\n\n  // Delete save data\n  deleteSave() {\n    try {\n      localStorage.removeItem(this.saveKey);\n      localStorage.removeItem(this.saveKey + '_backup');\n      console.log('🗑️ Save data deleted');\n      this.showSaveNotification('Save Deleted!', 'info');\n      return true;\n    } catch (error) {\n      console.error('❌ Failed to delete save:', error);\n      return false;\n    }\n  }\n\n  // Check if save exists\n  hasSaveData() {\n    return localStorage.getItem(this.saveKey) !== null;\n  }\n\n  // Export save data\n  exportSave() {\n    try {\n      const saveData = this.loadGame();\n      const exportData = JSON.stringify(saveData, null, 2);\n      \n      const blob = new Blob([exportData], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n      \n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `first_reality_save_${new Date().toISOString().split('T')[0]}.json`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n      \n      this.showSaveNotification('Save Exported!', 'success');\n      return true;\n    } catch (error) {\n      console.error('❌ Failed to export save:', error);\n      this.showSaveNotification('Export Failed!', 'error');\n      return false;\n    }\n  }\n\n  // Import save data\n  importSave(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      \n      reader.onload = (e) => {\n        try {\n          const importData = JSON.parse(e.target.result);\n          \n          // Validate save data\n          if (this.validateSave(importData)) {\n            this.saveGame(importData);\n            this.showSaveNotification('Save Imported!', 'success');\n            resolve(importData);\n          } else {\n            throw new Error('Invalid save file format');\n          }\n        } catch (error) {\n          console.error('❌ Failed to import save:', error);\n          this.showSaveNotification('Import Failed!', 'error');\n          reject(error);\n        }\n      };\n      \n      reader.readAsText(file);\n    });\n  }\n\n  // Validate save data structure\n  validateSave(saveData) {\n    const requiredFields = ['player', 'party', 'inventory', 'progress'];\n    return requiredFields.every(field => saveData.hasOwnProperty(field));\n  }\n\n  // Auto-save functionality\n  setupAutoSave(gameInstance, interval = 60000) { // Auto-save every minute\n    if (this.autoSaveInterval) {\n      clearInterval(this.autoSaveInterval);\n    }\n\n    this.autoSaveInterval = setInterval(() => {\n      if (gameInstance && gameInstance.getGameData) {\n        const gameData = gameInstance.getGameData();\n        if (gameData.settings && gameData.settings.autoSave !== false) {\n          this.saveGame(gameData);\n        }\n      }\n    }, interval);\n  }\n\n  // Show save notification\n  showSaveNotification(message, type = 'info') {\n    const notification = document.createElement('div');\n    notification.className = `save-notification save-${type}`;\n    notification.textContent = message;\n    \n    // Style the notification\n    Object.assign(notification.style, {\n      position: 'fixed',\n      top: '20px',\n      left: '50%',\n      transform: 'translateX(-50%)',\n      background: type === 'success' ? '#4CAF50' : \n                 type === 'error' ? '#f44336' : \n                 type === 'warning' ? '#ff9800' : '#2196F3',\n      color: 'white',\n      padding: '12px 24px',\n      borderRadius: '8px',\n      fontFamily: 'Final Fantasy, monospace',\n      fontSize: '14px',\n      fontWeight: 'bold',\n      zIndex: '10000',\n      boxShadow: '0 4px 12px rgba(0,0,0,0.3)',\n      animation: 'slideInDown 0.3s ease-out'\n    });\n    \n    document.body.appendChild(notification);\n    \n    // Remove notification after 3 seconds\n    setTimeout(() => {\n      notification.style.animation = 'slideOutUp 0.3s ease-in';\n      setTimeout(() => {\n        if (notification.parentNode) {\n          notification.parentNode.removeChild(notification);\n        }\n      }, 300);\n    }, 3000);\n  }\n\n  // Get save statistics\n  getSaveStats() {\n    const saveData = this.loadGame();\n    return {\n      saveExists: this.hasSaveData(),\n      playerLevel: saveData.player ? saveData.player.level : 1,\n      playtime: this.formatPlaytime(saveData.statistics ? saveData.statistics.totalPlaytime || 0 : 0),\n      battlesWon: saveData.progress ? saveData.progress.battlesWon || 0 : 0,\n      lastSaved: new Date(saveData.timestamp || Date.now()).toLocaleString()\n    };\n  }\n\n  // Format playtime for display\n  formatPlaytime(milliseconds) {\n    const hours = Math.floor(milliseconds / 3600000);\n    const minutes = Math.floor((milliseconds % 3600000) / 60000);\n    const seconds = Math.floor((milliseconds % 60000) / 1000);\n    \n    if (hours > 0) {\n      return `${hours}h ${minutes}m ${seconds}s`;\n    } else if (minutes > 0) {\n      return `${minutes}m ${seconds}s`;\n    } else {\n      return `${seconds}s`;\n    }\n  }\n\n  // Cleanup\n  destroy() {\n    if (this.autoSaveInterval) {\n      clearInterval(this.autoSaveInterval);\n    }\n  }\n}","// Advanced Sound System with Web Audio API\nexport default class SoundSystem {\n  constructor() {\n    this.audioContext = null;\n    this.masterVolume = 0.3;\n    this.musicVolume = 0.5;\n    this.sfxVolume = 0.7;\n    this.isMuted = true; // Start muted\n    \n    this.sounds = new Map();\n    this.music = new Map();\n    this.currentMusic = null;\n    this.fadeInterval = null;\n    \n    this.initializeAudioContext();\n    this.createSoundEffects();\n  }\n\n  // Initialize Web Audio API\n  initializeAudioContext() {\n    try {\n      this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      \n      // Create master gain node\n      this.masterGain = this.audioContext.createGain();\n      this.masterGain.connect(this.audioContext.destination);\n      this.masterGain.gain.value = this.masterVolume;\n      \n      // Create separate gain nodes for music and SFX\n      this.musicGain = this.audioContext.createGain();\n      this.musicGain.connect(this.masterGain);\n      this.musicGain.gain.value = this.musicVolume;\n      \n      this.sfxGain = this.audioContext.createGain();\n      this.sfxGain.connect(this.masterGain);\n      this.sfxGain.gain.value = this.sfxVolume;\n      \n      console.log('🎵 Audio Context initialized');\n    } catch (error) {\n      console.warn('⚠️ Web Audio API not supported, falling back to HTML5 audio');\n    }\n  }\n\n  // Create procedural sound effects\n  createSoundEffects() {\n    // Attack sounds\n    this.sounds.set('sword_slash', this.createSwordSlash);\n    this.sounds.set('magic_cast', this.createMagicCast);\n    this.sounds.set('bow_shot', this.createBowShot);\n    this.sounds.set('staff_hit', this.createStaffHit);\n    \n    // UI sounds\n    this.sounds.set('menu_select', this.createMenuSelect);\n    this.sounds.set('menu_confirm', this.createMenuConfirm);\n    this.sounds.set('menu_cancel', this.createMenuCancel);\n    \n    // Battle sounds\n    this.sounds.set('enemy_hit', this.createEnemyHit);\n    this.sounds.set('critical_hit', this.createCriticalHit);\n    this.sounds.set('heal', this.createHealSound);\n    this.sounds.set('level_up', this.createLevelUp);\n    this.sounds.set('victory', this.createVictory);\n    this.sounds.set('defeat', this.createDefeat);\n    \n    // Environment sounds\n    this.sounds.set('footstep', this.createFootstep);\n    this.sounds.set('door_open', this.createDoorOpen);\n    this.sounds.set('item_get', this.createItemGet);\n  }\n\n  // Play sound effect\n  playSound(soundName, volume = 1.0, pitch = 1.0) {\n    if (this.isMuted || !this.audioContext) return;\n    \n    const soundGenerator = this.sounds.get(soundName);\n    if (soundGenerator) {\n      try {\n        soundGenerator.call(this, volume, pitch);\n      } catch (error) {\n        console.warn(`Failed to play sound: ${soundName}`, error);\n      }\n    }\n  }\n\n  // Create sword slash sound\n  createSwordSlash(volume = 1.0, pitch = 1.0) {\n    const duration = 0.3;\n    const oscillator = this.audioContext.createOscillator();\n    const gainNode = this.audioContext.createGain();\n    const filter = this.audioContext.createBiquadFilter();\n    \n    oscillator.connect(filter);\n    filter.connect(gainNode);\n    gainNode.connect(this.sfxGain);\n    \n    // Sword swoosh effect\n    oscillator.type = 'sawtooth';\n    oscillator.frequency.setValueAtTime(200 * pitch, this.audioContext.currentTime);\n    oscillator.frequency.exponentialRampToValueAtTime(100 * pitch, this.audioContext.currentTime + duration);\n    \n    filter.type = 'lowpass';\n    filter.frequency.setValueAtTime(2000, this.audioContext.currentTime);\n    filter.frequency.exponentialRampToValueAtTime(500, this.audioContext.currentTime + duration);\n    \n    gainNode.gain.setValueAtTime(0.3 * volume, this.audioContext.currentTime);\n    gainNode.gain.exponentialRampToValueAtTime(0.01, this.audioContext.currentTime + duration);\n    \n    oscillator.start(this.audioContext.currentTime);\n    oscillator.stop(this.audioContext.currentTime + duration);\n  }\n\n  // Create magic cast sound\n  createMagicCast(volume = 1.0, pitch = 1.0) {\n    const duration = 0.8;\n    \n    // Create multiple oscillators for magical effect\n    for (let i = 0; i < 3; i++) {\n      const oscillator = this.audioContext.createOscillator();\n      const gainNode = this.audioContext.createGain();\n      const delay = this.audioContext.createDelay();\n      \n      oscillator.connect(delay);\n      delay.connect(gainNode);\n      gainNode.connect(this.sfxGain);\n      \n      oscillator.type = 'sine';\n      oscillator.frequency.setValueAtTime((440 + i * 110) * pitch, this.audioContext.currentTime);\n      oscillator.frequency.linearRampToValueAtTime((880 + i * 220) * pitch, this.audioContext.currentTime + duration);\n      \n      delay.delayTime.value = i * 0.05;\n      \n      gainNode.gain.setValueAtTime(0.2 * volume, this.audioContext.currentTime + i * 0.1);\n      gainNode.gain.exponentialRampToValueAtTime(0.01, this.audioContext.currentTime + duration);\n      \n      oscillator.start(this.audioContext.currentTime + i * 0.1);\n      oscillator.stop(this.audioContext.currentTime + duration);\n    }\n  }\n\n  // Create bow shot sound\n  createBowShot(volume = 1.0, pitch = 1.0) {\n    const duration = 0.2;\n    const oscillator = this.audioContext.createOscillator();\n    const gainNode = this.audioContext.createGain();\n    const filter = this.audioContext.createBiquadFilter();\n    \n    oscillator.connect(filter);\n    filter.connect(gainNode);\n    gainNode.connect(this.sfxGain);\n    \n    oscillator.type = 'triangle';\n    oscillator.frequency.setValueAtTime(800 * pitch, this.audioContext.currentTime);\n    oscillator.frequency.exponentialRampToValueAtTime(200 * pitch, this.audioContext.currentTime + duration);\n    \n    filter.type = 'bandpass';\n    filter.frequency.value = 1000;\n    filter.Q.value = 5;\n    \n    gainNode.gain.setValueAtTime(0.4 * volume, this.audioContext.currentTime);\n    gainNode.gain.exponentialRampToValueAtTime(0.01, this.audioContext.currentTime + duration);\n    \n    oscillator.start(this.audioContext.currentTime);\n    oscillator.stop(this.audioContext.currentTime + duration);\n  }\n\n  // Create menu select sound\n  createMenuSelect(volume = 1.0, pitch = 1.0) {\n    const duration = 0.1;\n    const oscillator = this.audioContext.createOscillator();\n    const gainNode = this.audioContext.createGain();\n    \n    oscillator.connect(gainNode);\n    gainNode.connect(this.sfxGain);\n    \n    oscillator.type = 'square';\n    oscillator.frequency.value = 800 * pitch;\n    \n    gainNode.gain.setValueAtTime(0.2 * volume, this.audioContext.currentTime);\n    gainNode.gain.exponentialRampToValueAtTime(0.01, this.audioContext.currentTime + duration);\n    \n    oscillator.start(this.audioContext.currentTime);\n    oscillator.stop(this.audioContext.currentTime + duration);\n  }\n\n  // Create critical hit sound\n  createCriticalHit(volume = 1.0, pitch = 1.0) {\n    const duration = 0.5;\n    \n    // Create dramatic critical hit sound\n    for (let i = 0; i < 5; i++) {\n      const oscillator = this.audioContext.createOscillator();\n      const gainNode = this.audioContext.createGain();\n      const filter = this.audioContext.createBiquadFilter();\n      \n      oscillator.connect(filter);\n      filter.connect(gainNode);\n      gainNode.connect(this.sfxGain);\n      \n      oscillator.type = i % 2 === 0 ? 'sawtooth' : 'square';\n      oscillator.frequency.setValueAtTime((300 + i * 100) * pitch, this.audioContext.currentTime);\n      oscillator.frequency.exponentialRampToValueAtTime((150 + i * 50) * pitch, this.audioContext.currentTime + duration);\n      \n      filter.type = 'lowpass';\n      filter.frequency.setValueAtTime(3000, this.audioContext.currentTime);\n      filter.frequency.exponentialRampToValueAtTime(800, this.audioContext.currentTime + duration);\n      \n      gainNode.gain.setValueAtTime(0.15 * volume, this.audioContext.currentTime + i * 0.02);\n      gainNode.gain.exponentialRampToValueAtTime(0.01, this.audioContext.currentTime + duration);\n      \n      oscillator.start(this.audioContext.currentTime + i * 0.02);\n      oscillator.stop(this.audioContext.currentTime + duration);\n    }\n  }\n\n  // Create heal sound\n  createHealSound(volume = 1.0, pitch = 1.0) {\n    const duration = 0.6;\n    \n    // Gentle, uplifting heal sound\n    for (let i = 0; i < 4; i++) {\n      const oscillator = this.audioContext.createOscillator();\n      const gainNode = this.audioContext.createGain();\n      \n      oscillator.connect(gainNode);\n      gainNode.connect(this.sfxGain);\n      \n      oscillator.type = 'sine';\n      oscillator.frequency.setValueAtTime((440 + i * 110) * pitch, this.audioContext.currentTime + i * 0.1);\n      \n      gainNode.gain.setValueAtTime(0, this.audioContext.currentTime + i * 0.1);\n      gainNode.gain.linearRampToValueAtTime(0.15 * volume, this.audioContext.currentTime + i * 0.1 + 0.05);\n      gainNode.gain.exponentialRampToValueAtTime(0.01, this.audioContext.currentTime + duration);\n      \n      oscillator.start(this.audioContext.currentTime + i * 0.1);\n      oscillator.stop(this.audioContext.currentTime + duration);\n    }\n  }\n\n  // Create level up sound\n  createLevelUp(volume = 1.0, pitch = 1.0) {\n    const duration = 1.2;\n    const notes = [261.63, 329.63, 392.00, 523.25]; // C, E, G, C (major chord)\n    \n    notes.forEach((freq, index) => {\n      const oscillator = this.audioContext.createOscillator();\n      const gainNode = this.audioContext.createGain();\n      \n      oscillator.connect(gainNode);\n      gainNode.connect(this.sfxGain);\n      \n      oscillator.type = 'triangle';\n      oscillator.frequency.value = freq * pitch;\n      \n      gainNode.gain.setValueAtTime(0, this.audioContext.currentTime + index * 0.2);\n      gainNode.gain.linearRampToValueAtTime(0.2 * volume, this.audioContext.currentTime + index * 0.2 + 0.1);\n      gainNode.gain.exponentialRampToValueAtTime(0.01, this.audioContext.currentTime + duration);\n      \n      oscillator.start(this.audioContext.currentTime + index * 0.2);\n      oscillator.stop(this.audioContext.currentTime + duration);\n    });\n  }\n\n  // Set master volume\n  setMasterVolume(volume) {\n    this.masterVolume = Math.max(0, Math.min(1, volume));\n    if (this.masterGain) {\n      this.masterGain.gain.value = this.isMuted ? 0 : this.masterVolume;\n    }\n  }\n\n  // Set music volume\n  setMusicVolume(volume) {\n    this.musicVolume = Math.max(0, Math.min(1, volume));\n    if (this.musicGain) {\n      this.musicGain.gain.value = this.musicVolume;\n    }\n  }\n\n  // Set SFX volume\n  setSFXVolume(volume) {\n    this.sfxVolume = Math.max(0, Math.min(1, volume));\n    if (this.sfxGain) {\n      this.sfxGain.gain.value = this.sfxVolume;\n    }\n  }\n\n  // Mute/unmute\n  setMuted(muted) {\n    this.isMuted = muted;\n    if (this.masterGain) {\n      this.masterGain.gain.value = muted ? 0 : this.masterVolume;\n    }\n  }\n\n  // Play music with fade in\n  playMusic(audioElement, fadeInTime = 1.0) {\n    if (this.isMuted) return;\n    \n    if (this.currentMusic && this.currentMusic !== audioElement) {\n      this.fadeOutMusic(this.currentMusic, 0.5);\n    }\n    \n    this.currentMusic = audioElement;\n    audioElement.volume = 0;\n    audioElement.currentTime = 0;\n    \n    const playPromise = audioElement.play();\n    if (playPromise) {\n      playPromise.then(() => {\n        this.fadeInMusic(audioElement, fadeInTime);\n      }).catch(error => {\n        console.warn('Music play failed:', error);\n      });\n    }\n  }\n\n  // Fade in music\n  fadeInMusic(audioElement, duration) {\n    const targetVolume = this.masterVolume * this.musicVolume;\n    const steps = 60; // 60 steps for smooth fade\n    const stepTime = duration * 1000 / steps;\n    const volumeStep = targetVolume / steps;\n    \n    let currentStep = 0;\n    this.fadeInterval = setInterval(() => {\n      currentStep++;\n      audioElement.volume = Math.min(volumeStep * currentStep, targetVolume);\n      \n      if (currentStep >= steps) {\n        clearInterval(this.fadeInterval);\n      }\n    }, stepTime);\n  }\n\n  // Fade out music\n  fadeOutMusic(audioElement, duration) {\n    const initialVolume = audioElement.volume;\n    const steps = 60;\n    const stepTime = duration * 1000 / steps;\n    const volumeStep = initialVolume / steps;\n    \n    let currentStep = 0;\n    const fadeOut = setInterval(() => {\n      currentStep++;\n      audioElement.volume = Math.max(initialVolume - (volumeStep * currentStep), 0);\n      \n      if (currentStep >= steps || audioElement.volume <= 0) {\n        clearInterval(fadeOut);\n        audioElement.pause();\n      }\n    }, stepTime);\n  }\n\n  // Resume audio context (required for user interaction)\n  resumeAudioContext() {\n    if (this.audioContext && this.audioContext.state === 'suspended') {\n      this.audioContext.resume().then(() => {\n        console.log('🎵 Audio Context resumed');\n      });\n    }\n  }\n\n  // Get audio context state\n  getAudioState() {\n    return {\n      supported: !!this.audioContext,\n      state: this.audioContext ? this.audioContext.state : 'unavailable',\n      masterVolume: this.masterVolume,\n      musicVolume: this.musicVolume,\n      sfxVolume: this.sfxVolume,\n      isMuted: this.isMuted\n    };\n  }\n\n  // Cleanup\n  destroy() {\n    if (this.fadeInterval) {\n      clearInterval(this.fadeInterval);\n    }\n    \n    if (this.currentMusic) {\n      this.currentMusic.pause();\n    }\n    \n    if (this.audioContext) {\n      this.audioContext.close();\n    }\n  }\n\n  // Additional sound effects (implement remaining sounds)\n  createStaffHit(volume = 1.0, pitch = 1.0) {\n    // Similar to sword slash but with different frequency profile\n    this.createSwordSlash(volume * 0.8, pitch * 0.7);\n  }\n\n  createMenuConfirm(volume = 1.0, pitch = 1.0) {\n    const duration = 0.15;\n    const oscillator = this.audioContext.createOscillator();\n    const gainNode = this.audioContext.createGain();\n    \n    oscillator.connect(gainNode);\n    gainNode.connect(this.sfxGain);\n    \n    oscillator.type = 'square';\n    oscillator.frequency.setValueAtTime(600 * pitch, this.audioContext.currentTime);\n    oscillator.frequency.linearRampToValueAtTime(800 * pitch, this.audioContext.currentTime + duration);\n    \n    gainNode.gain.setValueAtTime(0.25 * volume, this.audioContext.currentTime);\n    gainNode.gain.exponentialRampToValueAtTime(0.01, this.audioContext.currentTime + duration);\n    \n    oscillator.start(this.audioContext.currentTime);\n    oscillator.stop(this.audioContext.currentTime + duration);\n  }\n\n  createMenuCancel(volume = 1.0, pitch = 1.0) {\n    const duration = 0.2;\n    const oscillator = this.audioContext.createOscillator();\n    const gainNode = this.audioContext.createGain();\n    \n    oscillator.connect(gainNode);\n    gainNode.connect(this.sfxGain);\n    \n    oscillator.type = 'square';\n    oscillator.frequency.setValueAtTime(400 * pitch, this.audioContext.currentTime);\n    oscillator.frequency.linearRampToValueAtTime(200 * pitch, this.audioContext.currentTime + duration);\n    \n    gainNode.gain.setValueAtTime(0.2 * volume, this.audioContext.currentTime);\n    gainNode.gain.exponentialRampToValueAtTime(0.01, this.audioContext.currentTime + duration);\n    \n    oscillator.start(this.audioContext.currentTime);\n    oscillator.stop(this.audioContext.currentTime + duration);\n  }\n\n  createEnemyHit(volume = 1.0, pitch = 1.0) {\n    // Lower pitched, more aggressive sound\n    this.createSwordSlash(volume, pitch * 0.6);\n  }\n\n  createVictory(volume = 1.0, pitch = 1.0) {\n    // Triumphant fanfare\n    const notes = [261.63, 329.63, 392.00, 523.25, 659.25]; // C, E, G, C, E\n    const duration = 2.0;\n    \n    notes.forEach((freq, index) => {\n      const oscillator = this.audioContext.createOscillator();\n      const gainNode = this.audioContext.createGain();\n      \n      oscillator.connect(gainNode);\n      gainNode.connect(this.sfxGain);\n      \n      oscillator.type = 'triangle';\n      oscillator.frequency.value = freq * pitch;\n      \n      gainNode.gain.setValueAtTime(0, this.audioContext.currentTime + index * 0.3);\n      gainNode.gain.linearRampToValueAtTime(0.2 * volume, this.audioContext.currentTime + index * 0.3 + 0.1);\n      gainNode.gain.exponentialRampToValueAtTime(0.01, this.audioContext.currentTime + duration);\n      \n      oscillator.start(this.audioContext.currentTime + index * 0.3);\n      oscillator.stop(this.audioContext.currentTime + duration);\n    });\n  }\n\n  createDefeat(volume = 1.0, pitch = 1.0) {\n    // Somber defeat sound\n    const duration = 1.5;\n    const oscillator = this.audioContext.createOscillator();\n    const gainNode = this.audioContext.createGain();\n    \n    oscillator.connect(gainNode);\n    gainNode.connect(this.sfxGain);\n    \n    oscillator.type = 'sine';\n    oscillator.frequency.setValueAtTime(220 * pitch, this.audioContext.currentTime);\n    oscillator.frequency.exponentialRampToValueAtTime(110 * pitch, this.audioContext.currentTime + duration);\n    \n    gainNode.gain.setValueAtTime(0.3 * volume, this.audioContext.currentTime);\n    gainNode.gain.exponentialRampToValueAtTime(0.01, this.audioContext.currentTime + duration);\n    \n    oscillator.start(this.audioContext.currentTime);\n    oscillator.stop(this.audioContext.currentTime + duration);\n  }\n\n  createFootstep(volume = 1.0, pitch = 1.0) {\n    // Quick, muffled step sound\n    const duration = 0.1;\n    const oscillator = this.audioContext.createOscillator();\n    const gainNode = this.audioContext.createGain();\n    const filter = this.audioContext.createBiquadFilter();\n    \n    oscillator.connect(filter);\n    filter.connect(gainNode);\n    gainNode.connect(this.sfxGain);\n    \n    oscillator.type = 'brown';\n    filter.type = 'lowpass';\n    filter.frequency.value = 200;\n    \n    gainNode.gain.setValueAtTime(0.1 * volume, this.audioContext.currentTime);\n    gainNode.gain.exponentialRampToValueAtTime(0.01, this.audioContext.currentTime + duration);\n    \n    oscillator.start(this.audioContext.currentTime);\n    oscillator.stop(this.audioContext.currentTime + duration);\n  }\n\n  createDoorOpen(volume = 1.0, pitch = 1.0) {\n    // Creaking door sound\n    const duration = 0.8;\n    const oscillator = this.audioContext.createOscillator();\n    const gainNode = this.audioContext.createGain();\n    \n    oscillator.connect(gainNode);\n    gainNode.connect(this.sfxGain);\n    \n    oscillator.type = 'sawtooth';\n    oscillator.frequency.setValueAtTime(150 * pitch, this.audioContext.currentTime);\n    oscillator.frequency.linearRampToValueAtTime(200 * pitch, this.audioContext.currentTime + duration);\n    \n    gainNode.gain.setValueAtTime(0.15 * volume, this.audioContext.currentTime);\n    gainNode.gain.exponentialRampToValueAtTime(0.01, this.audioContext.currentTime + duration);\n    \n    oscillator.start(this.audioContext.currentTime);\n    oscillator.stop(this.audioContext.currentTime + duration);\n  }\n\n  createItemGet(volume = 1.0, pitch = 1.0) {\n    // Pleasant item acquisition sound\n    const notes = [523.25, 659.25, 783.99]; // C, E, G\n    \n    notes.forEach((freq, index) => {\n      const oscillator = this.audioContext.createOscillator();\n      const gainNode = this.audioContext.createGain();\n      \n      oscillator.connect(gainNode);\n      gainNode.connect(this.sfxGain);\n      \n      oscillator.type = 'sine';\n      oscillator.frequency.value = freq * pitch;\n      \n      gainNode.gain.setValueAtTime(0, this.audioContext.currentTime + index * 0.1);\n      gainNode.gain.linearRampToValueAtTime(0.2 * volume, this.audioContext.currentTime + index * 0.1 + 0.05);\n      gainNode.gain.exponentialRampToValueAtTime(0.01, this.audioContext.currentTime + 0.5);\n      \n      oscillator.start(this.audioContext.currentTime + index * 0.1);\n      oscillator.stop(this.audioContext.currentTime + 0.5);\n    });\n  }\n}","// Advanced Character Progression System\nexport default class CharacterProgression {\n  constructor() {\n    this.experienceTable = this.generateExperienceTable();\n    this.skillTrees = this.createSkillTrees();\n    this.equipment = this.createEquipmentDatabase();\n    this.achievements = this.createAchievements();\n  }\n\n  // Generate experience table for levels 1-99\n  generateExperienceTable() {\n    const table = [0]; // Level 1 starts at 0 XP\n    \n    for (let level = 2; level <= 99; level++) {\n      // Exponential growth with some variance\n      const baseXP = Math.floor(100 * Math.pow(level, 1.8));\n      table.push(baseXP);\n    }\n    \n    return table;\n  }\n\n  // Create skill trees for each character class\n  createSkillTrees() {\n    return {\n      Knight: {\n        name: 'Knight',\n        skills: {\n          // Offensive skills\n          'Power Strike': {\n            id: 'power_strike',\n            name: 'Power Strike',\n            description: 'Deal 150% weapon damage',\n            type: 'offensive',\n            mpCost: 8,\n            levelRequired: 3,\n            prerequisites: [],\n            effect: { damageMultiplier: 1.5 }\n          },\n          'Whirlwind': {\n            id: 'whirlwind',\n            name: 'Whirlwind',\n            description: 'Attack all enemies for 80% damage',\n            type: 'offensive',\n            mpCost: 15,\n            levelRequired: 7,\n            prerequisites: ['power_strike'],\n            effect: { damageMultiplier: 0.8, target: 'all_enemies' }\n          },\n          'Berserker Rage': {\n            id: 'berserker_rage',\n            name: 'Berserker Rage',\n            description: 'Double attack power for 3 turns, take 25% more damage',\n            type: 'buff',\n            mpCost: 20,\n            levelRequired: 12,\n            prerequisites: ['whirlwind'],\n            effect: { attackBoost: 2.0, defenseReduction: 0.25, duration: 3 }\n          },\n          \n          // Defensive skills\n          'Shield Wall': {\n            id: 'shield_wall',\n            name: 'Shield Wall',\n            description: 'Reduce all damage by 50% for 2 turns',\n            type: 'defensive',\n            mpCost: 12,\n            levelRequired: 5,\n            prerequisites: [],\n            effect: { damageReduction: 0.5, duration: 2 }\n          },\n          'Taunt': {\n            id: 'taunt',\n            name: 'Taunt',\n            description: 'Force all enemies to target you for 2 turns',\n            type: 'defensive',\n            mpCost: 8,\n            levelRequired: 4,\n            prerequisites: [],\n            effect: { forceTaunt: true, duration: 2 }\n          },\n          'Guardian': {\n            id: 'guardian',\n            name: 'Guardian',\n            description: 'Take 50% of damage dealt to allies',\n            type: 'defensive',\n            mpCost: 18,\n            levelRequired: 10,\n            prerequisites: ['shield_wall', 'taunt'],\n            effect: { damageRedirect: 0.5, duration: 4 }\n          }\n        }\n      },\n      \n      Cleric: {\n        name: 'Cleric',\n        skills: {\n          // Healing skills\n          'Minor Heal': {\n            id: 'minor_heal',\n            name: 'Minor Heal',\n            description: 'Restore 40-60 HP to one ally',\n            type: 'healing',\n            mpCost: 6,\n            levelRequired: 2,\n            prerequisites: [],\n            effect: { healAmount: [40, 60], target: 'single_ally' }\n          },\n          'Major Heal': {\n            id: 'major_heal',\n            name: 'Major Heal',\n            description: 'Restore 80-120 HP to one ally',\n            type: 'healing',\n            mpCost: 15,\n            levelRequired: 6,\n            prerequisites: ['minor_heal'],\n            effect: { healAmount: [80, 120], target: 'single_ally' }\n          },\n          'Group Heal': {\n            id: 'group_heal',\n            name: 'Group Heal',\n            description: 'Restore 30-50 HP to all allies',\n            type: 'healing',\n            mpCost: 25,\n            levelRequired: 9,\n            prerequisites: ['major_heal'],\n            effect: { healAmount: [30, 50], target: 'all_allies' }\n          },\n          'Resurrection': {\n            id: 'resurrection',\n            name: 'Resurrection',\n            description: 'Revive fallen ally with 25% HP',\n            type: 'healing',\n            mpCost: 40,\n            levelRequired: 15,\n            prerequisites: ['group_heal'],\n            effect: { revive: true, hpPercent: 0.25 }\n          },\n          \n          // Support skills\n          'Bless': {\n            id: 'bless',\n            name: 'Bless',\n            description: 'Increase ally attack and defense by 25% for 4 turns',\n            type: 'buff',\n            mpCost: 10,\n            levelRequired: 4,\n            prerequisites: [],\n            effect: { attackBoost: 1.25, defenseBoost: 1.25, duration: 4 }\n          },\n          'Holy Light': {\n            id: 'holy_light',\n            name: 'Holy Light',\n            description: 'Deal magic damage to all undead enemies',\n            type: 'offensive',\n            mpCost: 18,\n            levelRequired: 8,\n            prerequisites: ['bless'],\n            effect: { damageMultiplier: 2.0, target: 'undead_enemies' }\n          }\n        }\n      },\n      \n      Archer: {\n        name: 'Archer',\n        skills: {\n          // Precision skills\n          'Aimed Shot': {\n            id: 'aimed_shot',\n            name: 'Aimed Shot',\n            description: 'High accuracy shot with 25% critical chance',\n            type: 'offensive',\n            mpCost: 8,\n            levelRequired: 3,\n            prerequisites: [],\n            effect: { accuracy: 1.5, criticalChance: 0.25 }\n          },\n          'Multi Shot': {\n            id: 'multi_shot',\n            name: 'Multi Shot',\n            description: 'Fire arrows at 3 random enemies',\n            type: 'offensive',\n            mpCost: 15,\n            levelRequired: 6,\n            prerequisites: ['aimed_shot'],\n            effect: { shots: 3, target: 'random_enemies' }\n          },\n          'Rain of Arrows': {\n            id: 'rain_of_arrows',\n            name: 'Rain of Arrows',\n            description: 'Attack all enemies with reduced damage',\n            type: 'offensive',\n            mpCost: 22,\n            levelRequired: 10,\n            prerequisites: ['multi_shot'],\n            effect: { damageMultiplier: 0.7, target: 'all_enemies' }\n          },\n          \n          // Utility skills\n          'Eagle Eye': {\n            id: 'eagle_eye',\n            name: 'Eagle Eye',\n            description: 'Increase accuracy and critical rate for 3 turns',\n            type: 'buff',\n            mpCost: 12,\n            levelRequired: 5,\n            prerequisites: [],\n            effect: { accuracyBoost: 1.5, criticalBoost: 0.3, duration: 3 }\n          },\n          'Poison Arrow': {\n            id: 'poison_arrow',\n            name: 'Poison Arrow',\n            description: 'Arrow that deals poison damage over 3 turns',\n            type: 'offensive',\n            mpCost: 10,\n            levelRequired: 7,\n            prerequisites: ['eagle_eye'],\n            effect: { poisonDamage: 15, duration: 3 }\n          }\n        }\n      },\n      \n      Wizard: {\n        name: 'Wizard',\n        skills: {\n          // Elemental magic\n          'Fireball': {\n            id: 'fireball',\n            name: 'Fireball',\n            description: 'Deal fire damage to one enemy',\n            type: 'offensive',\n            mpCost: 10,\n            levelRequired: 2,\n            prerequisites: [],\n            effect: { element: 'fire', damageMultiplier: 1.3 }\n          },\n          'Lightning Bolt': {\n            id: 'lightning_bolt',\n            name: 'Lightning Bolt',\n            description: 'Deal lightning damage to one enemy',\n            type: 'offensive',\n            mpCost: 12,\n            levelRequired: 3,\n            prerequisites: [],\n            effect: { element: 'lightning', damageMultiplier: 1.2, stunChance: 0.2 }\n          },\n          'Ice Shard': {\n            id: 'ice_shard',\n            name: 'Ice Shard',\n            description: 'Deal ice damage and slow enemy',\n            type: 'offensive',\n            mpCost: 11,\n            levelRequired: 3,\n            prerequisites: [],\n            effect: { element: 'ice', damageMultiplier: 1.1, slowEffect: 0.3 }\n          },\n          'Meteor': {\n            id: 'meteor',\n            name: 'Meteor',\n            description: 'Devastating fire damage to all enemies',\n            type: 'offensive',\n            mpCost: 35,\n            levelRequired: 12,\n            prerequisites: ['fireball', 'lightning_bolt', 'ice_shard'],\n            effect: { element: 'fire', damageMultiplier: 1.8, target: 'all_enemies' }\n          },\n          \n          // Support magic\n          'Mana Shield': {\n            id: 'mana_shield',\n            name: 'Mana Shield',\n            description: 'Convert damage to MP loss instead of HP',\n            type: 'defensive',\n            mpCost: 20,\n            levelRequired: 8,\n            prerequisites: [],\n            effect: { manaShield: true, duration: 5 }\n          },\n          'Arcane Intellect': {\n            id: 'arcane_intellect',\n            name: 'Arcane Intellect',\n            description: 'Increase magic power and MP regeneration',\n            type: 'buff',\n            mpCost: 15,\n            levelRequired: 6,\n            prerequisites: [],\n            effect: { magicBoost: 1.4, mpRegen: 5, duration: 6 }\n          }\n        }\n      }\n    };\n  }\n\n  // Create equipment database\n  createEquipmentDatabase() {\n    return {\n      weapons: {\n        // Knight weapons\n        'Iron Sword': {\n          id: 'iron_sword',\n          name: 'Iron Sword',\n          type: 'weapon',\n          class: 'Knight',\n          attack: 15,\n          price: 200,\n          description: 'A sturdy iron blade'\n        },\n        'Steel Sword': {\n          id: 'steel_sword',\n          name: 'Steel Sword',\n          type: 'weapon',\n          class: 'Knight',\n          attack: 25,\n          price: 500,\n          description: 'Sharp steel forged blade'\n        },\n        'Excalibur': {\n          id: 'excalibur',\n          name: 'Excalibur',\n          type: 'weapon',\n          class: 'Knight',\n          attack: 50,\n          price: 5000,\n          description: 'Legendary holy sword',\n          special: { holyDamage: 10, criticalRate: 0.15 }\n        },\n        \n        // Cleric weapons\n        'Oak Staff': {\n          id: 'oak_staff',\n          name: 'Oak Staff',\n          type: 'weapon',\n          class: 'Cleric',\n          attack: 8,\n          magic: 12,\n          price: 150,\n          description: 'Simple wooden staff'\n        },\n        'Crystal Staff': {\n          id: 'crystal_staff',\n          name: 'Crystal Staff',\n          type: 'weapon',\n          class: 'Cleric',\n          attack: 12,\n          magic: 25,\n          price: 800,\n          description: 'Staff topped with healing crystal'\n        },\n        \n        // Archer weapons\n        'Short Bow': {\n          id: 'short_bow',\n          name: 'Short Bow',\n          type: 'weapon',\n          class: 'Archer',\n          attack: 12,\n          speed: 5,\n          price: 180,\n          description: 'Quick and accurate bow'\n        },\n        'Elven Bow': {\n          id: 'elven_bow',\n          name: 'Elven Bow',\n          type: 'weapon',\n          class: 'Archer',\n          attack: 30,\n          speed: 10,\n          price: 1200,\n          description: 'Masterwork elven craftsmanship'\n        },\n        \n        // Wizard weapons\n        'Magic Wand': {\n          id: 'magic_wand',\n          name: 'Magic Wand',\n          type: 'weapon',\n          class: 'Wizard',\n          attack: 5,\n          magic: 15,\n          price: 120,\n          description: 'Basic spellcasting focus'\n        },\n        'Arcane Staff': {\n          id: 'arcane_staff',\n          name: 'Arcane Staff',\n          type: 'weapon',\n          class: 'Wizard',\n          attack: 10,\n          magic: 35,\n          price: 1500,\n          description: 'Staff humming with arcane power'\n        }\n      },\n      \n      armor: {\n        'Leather Armor': {\n          id: 'leather_armor',\n          name: 'Leather Armor',\n          type: 'armor',\n          defense: 8,\n          price: 150,\n          description: 'Basic leather protection'\n        },\n        'Chain Mail': {\n          id: 'chain_mail',\n          name: 'Chain Mail',\n          type: 'armor',\n          defense: 15,\n          price: 400,\n          description: 'Interlocked metal rings'\n        },\n        'Plate Armor': {\n          id: 'plate_armor',\n          name: 'Plate Armor',\n          type: 'armor',\n          defense: 25,\n          price: 1000,\n          description: 'Heavy metal plate protection'\n        },\n        'Dragon Scale': {\n          id: 'dragon_scale',\n          name: 'Dragon Scale Armor',\n          type: 'armor',\n          defense: 40,\n          price: 5000,\n          description: 'Armor made from dragon scales',\n          special: { fireResistance: 0.5, magicDefense: 10 }\n        }\n      },\n      \n      accessories: {\n        'Power Ring': {\n          id: 'power_ring',\n          name: 'Power Ring',\n          type: 'accessory',\n          attack: 5,\n          price: 300,\n          description: 'Ring that enhances physical strength'\n        },\n        'Magic Ring': {\n          id: 'magic_ring',\n          name: 'Magic Ring',\n          type: 'accessory',\n          magic: 8,\n          price: 350,\n          description: 'Ring that amplifies magical power'\n        },\n        'Life Amulet': {\n          id: 'life_amulet',\n          name: 'Life Amulet',\n          type: 'accessory',\n          maxHealth: 25,\n          price: 500,\n          description: 'Amulet that increases vitality'\n        },\n        'Speed Boots': {\n          id: 'speed_boots',\n          name: 'Speed Boots',\n          type: 'accessory',\n          speed: 10,\n          price: 400,\n          description: 'Boots that increase movement speed'\n        }\n      }\n    };\n  }\n\n  // Create achievement system\n  createAchievements() {\n    return {\n      'first_victory': {\n        id: 'first_victory',\n        name: 'First Victory',\n        description: 'Win your first battle',\n        icon: '🏆',\n        reward: { experience: 50, gold: 100 }\n      },\n      'level_10': {\n        id: 'level_10',\n        name: 'Veteran',\n        description: 'Reach level 10 with any character',\n        icon: '⭐',\n        reward: { gold: 500, item: 'Power Ring' }\n      },\n      'perfect_battle': {\n        id: 'perfect_battle',\n        name: 'Perfect Victory',\n        description: 'Win a battle without taking damage',\n        icon: '💎',\n        reward: { experience: 100, gold: 200 }\n      },\n      'magic_master': {\n        id: 'magic_master',\n        name: 'Magic Master',\n        description: 'Cast 100 spells',\n        icon: '🔮',\n        reward: { item: 'Magic Ring', gold: 300 }\n      },\n      'treasure_hunter': {\n        id: 'treasure_hunter',\n        name: 'Treasure Hunter',\n        description: 'Collect 10 different items',\n        icon: '💰',\n        reward: { gold: 1000 }\n      }\n    };\n  }\n\n  // Calculate experience needed for next level\n  getExperienceToNextLevel(currentLevel, currentExp) {\n    if (currentLevel >= 99) return 0;\n    return this.experienceTable[currentLevel] - currentExp;\n  }\n\n  // Calculate level from experience\n  getLevelFromExperience(experience) {\n    for (let level = 1; level < this.experienceTable.length; level++) {\n      if (experience < this.experienceTable[level]) {\n        return level;\n      }\n    }\n    return 99; // Max level\n  }\n\n  // Level up character\n  levelUpCharacter(character) {\n    const oldLevel = character.level;\n    const newLevel = this.getLevelFromExperience(character.experience);\n    \n    if (newLevel > oldLevel) {\n      character.level = newLevel;\n      \n      // Calculate stat increases\n      const levelDiff = newLevel - oldLevel;\n      const statGains = this.calculateStatGains(character.job, levelDiff);\n      \n      // Apply stat increases\n      character.maxHealth += statGains.health;\n      character.health = character.maxHealth; // Full heal on level up\n      character.attack += statGains.attack;\n      character.defense += statGains.defense;\n      character.magic += statGains.magic;\n      character.speed += statGains.speed;\n      \n      // Check for new skills\n      const newSkills = this.getNewSkills(character.job, newLevel);\n      character.skills = [...character.skills, ...newSkills];\n      \n      console.log(`🎉 ${character.name} reached level ${newLevel}!`);\n      return {\n        leveledUp: true,\n        oldLevel,\n        newLevel,\n        statGains,\n        newSkills\n      };\n    }\n    \n    return { leveledUp: false };\n  }\n\n  // Calculate stat gains per level\n  calculateStatGains(job, levels) {\n    const baseGains = {\n      Knight: { health: 8, attack: 3, defense: 3, magic: 1, speed: 1 },\n      Cleric: { health: 5, attack: 2, defense: 2, magic: 4, speed: 1 },\n      Archer: { health: 6, attack: 3, defense: 2, magic: 2, speed: 3 },\n      Wizard: { health: 4, attack: 1, defense: 1, magic: 5, speed: 2 }\n    };\n    \n    const gains = baseGains[job] || baseGains.Knight;\n    \n    return {\n      health: gains.health * levels,\n      attack: gains.attack * levels,\n      defense: gains.defense * levels,\n      magic: gains.magic * levels,\n      speed: gains.speed * levels\n    };\n  }\n\n  // Get new skills unlocked at level\n  getNewSkills(job, level) {\n    const skillTree = this.skillTrees[job];\n    if (!skillTree) return [];\n    \n    const newSkills = [];\n    \n    Object.values(skillTree.skills).forEach(skill => {\n      if (skill.levelRequired === level) {\n        newSkills.push(skill.id);\n      }\n    });\n    \n    return newSkills;\n  }\n\n  // Check if character can learn skill\n  canLearnSkill(character, skillId) {\n    const skillTree = this.skillTrees[character.job];\n    if (!skillTree) return false;\n    \n    const skill = skillTree.skills[Object.keys(skillTree.skills).find(key => \n      skillTree.skills[key].id === skillId\n    )];\n    \n    if (!skill) return false;\n    \n    // Check level requirement\n    if (character.level < skill.levelRequired) return false;\n    \n    // Check if already known\n    if (character.skills.includes(skillId)) return false;\n    \n    // Check prerequisites\n    return skill.prerequisites.every(prereq => character.skills.includes(prereq));\n  }\n\n  // Apply equipment stats\n  applyEquipmentStats(character) {\n    let totalStats = {\n      attack: 0,\n      defense: 0,\n      magic: 0,\n      speed: 0,\n      maxHealth: 0\n    };\n    \n    // Apply weapon stats\n    if (character.equipment.weapon) {\n      const weapon = this.equipment.weapons[character.equipment.weapon];\n      if (weapon) {\n        totalStats.attack += weapon.attack || 0;\n        totalStats.magic += weapon.magic || 0;\n        totalStats.speed += weapon.speed || 0;\n      }\n    }\n    \n    // Apply armor stats\n    if (character.equipment.armor) {\n      const armor = this.equipment.armor[character.equipment.armor];\n      if (armor) {\n        totalStats.defense += armor.defense || 0;\n        totalStats.maxHealth += armor.maxHealth || 0;\n      }\n    }\n    \n    // Apply accessory stats\n    if (character.equipment.accessory) {\n      const accessory = this.equipment.accessories[character.equipment.accessory];\n      if (accessory) {\n        totalStats.attack += accessory.attack || 0;\n        totalStats.defense += accessory.defense || 0;\n        totalStats.magic += accessory.magic || 0;\n        totalStats.speed += accessory.speed || 0;\n        totalStats.maxHealth += accessory.maxHealth || 0;\n      }\n    }\n    \n    return totalStats;\n  }\n\n  // Check and award achievements\n  checkAchievements(gameData, action) {\n    const newAchievements = [];\n    \n    Object.values(this.achievements).forEach(achievement => {\n      // Skip if already earned\n      if (gameData.progress.achievements.includes(achievement.id)) return;\n      \n      let earned = false;\n      \n      switch (achievement.id) {\n        case 'first_victory':\n          earned = gameData.progress.battlesWon >= 1;\n          break;\n        case 'level_10':\n          earned = gameData.party.some(char => char.level >= 10);\n          break;\n        case 'perfect_battle':\n          earned = action === 'perfect_victory';\n          break;\n        case 'magic_master':\n          earned = gameData.statistics.magicCast >= 100;\n          break;\n        case 'treasure_hunter':\n          earned = gameData.inventory.items.length + \n                  gameData.inventory.weapons.length + \n                  gameData.inventory.armor.length + \n                  gameData.inventory.accessories.length >= 10;\n          break;\n      }\n      \n      if (earned) {\n        newAchievements.push(achievement);\n        gameData.progress.achievements.push(achievement.id);\n        \n        // Apply rewards\n        if (achievement.reward.experience) {\n          gameData.party.forEach(char => {\n            char.experience += achievement.reward.experience;\n          });\n        }\n        \n        if (achievement.reward.gold) {\n          gameData.player.gold += achievement.reward.gold;\n        }\n        \n        if (achievement.reward.item) {\n          // Add item to inventory\n          const existingItem = gameData.inventory.items.find(item => \n            item.name === achievement.reward.item\n          );\n          \n          if (existingItem) {\n            existingItem.quantity += 1;\n          } else {\n            gameData.inventory.items.push({\n              name: achievement.reward.item,\n              quantity: 1\n            });\n          }\n        }\n      }\n    });\n    \n    return newAchievements;\n  }\n\n  // Get character's effective stats (base + equipment)\n  getEffectiveStats(character) {\n    const equipmentStats = this.applyEquipmentStats(character);\n    \n    return {\n      maxHealth: character.maxHealth + equipmentStats.maxHealth,\n      attack: character.attack + equipmentStats.attack,\n      defense: character.defense + equipmentStats.defense,\n      magic: character.magic + equipmentStats.magic,\n      speed: character.speed + equipmentStats.speed\n    };\n  }\n\n  // Get available skills for character\n  getAvailableSkills(character) {\n    const skillTree = this.skillTrees[character.job];\n    if (!skillTree) return [];\n    \n    return Object.values(skillTree.skills).filter(skill => \n      this.canLearnSkill(character, skill.id)\n    );\n  }\n\n  // Get skill information\n  getSkillInfo(job, skillId) {\n    const skillTree = this.skillTrees[job];\n    if (!skillTree) return null;\n    \n    return Object.values(skillTree.skills).find(skill => skill.id === skillId);\n  }\n}","import Menu from \"./menu\";\nimport Game from \"./game\"\nimport Instructions from \"./tutorial\"\nimport GameView from \"./game_view\"\nimport SaveSystem from \"./save_system\"\nimport SoundSystem from \"./sound_system\"\nimport CharacterProgression from \"./character_progression\"\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  // Initialize core systems\n  const saveSystem = new SaveSystem();\n  const soundSystem = new SoundSystem();\n  const progression = new CharacterProgression();\n  \n  // Initialize UI components\n  const menuClass = new Menu('#menu li', \"menu\");\n  const tutorial = new Instructions;\n  const canvas = document.getElementById(\"battle-view\");\n  const enemiesUi = document.getElementById(\"enemies-ui\");\n  const partyUi = document.getElementById(\"party-ui\");\n  \n  // Setup canvas dimensions\n  canvas.width  = window.innerWidth * 0.85;\n  canvas.height = window.innerHeight * 0.80;\n  enemiesUi.width  = (canvas.width - 50) * 0.3;\n  enemiesUi.height = window.innerHeight - canvas.height - 50;\n  partyUi.width  = (canvas.width - 50) * 0.3;\n  partyUi.height = window.innerHeight - canvas.height - 50;\n  \n  // Initialize game with enhanced systems\n  const theGame = new Game(canvas, {\n    saveSystem,\n    soundSystem,\n    progression\n  });\n  \n  const gameRouter = new GameView(menuClass, theGame, tutorial, canvas, enemiesUi, partyUi, {\n    saveSystem,\n    soundSystem,\n    progression\n  })\n\n  let i = 0\n  let titleScreenBool = true\n  menuClass.selection(0);\n\n  if(titleScreenBool){\n    let titleScreen = document.getElementById(\"press-start\")\n    titleScreen.addEventListener(\"animationend\", function(){\n      console.log(\"remounted\")\n      titleScreenBool = false\n      document.body.addEventListener('keydown', function(e){\n        if(e.keyCode == 13){\n          titleScreen.classList.remove(\"title-screen-appearing\");\n          menuClass.cursorSelect.play()\n          titleScreen.classList.add(\"title-screen-disappear\");\n        }\n      })\n    })\n    titleScreen.addEventListener(\"animationend\", function(){\n      i += 1\n      if(i === 1){ return }\n      document.getElementById(\"title-screen-controller\").classList.add(\"none\");\n      gameRouter.start()\n      document.getElementById(\"title-screen-menu\").classList.remove(\"none\");\n      let titleMusic = document.getElementById(\"title-audio\")\n      titleMusic.volume = 0.3\n      titleMusic.play();\n    })\n  }\n\n});"],"sourceRoot":""}